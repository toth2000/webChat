{"version":3,"sources":["firebase.js","components/SignIn/style.js","components/SignIn/GoogleIcon.js","components/SignIn/SignIn.js","components/Home/style.js","components/Messages/style.js","components/Messages/Message/style.js","components/Messages/Message/Message.js","components/Messages/Messages.js","components/Chat/style.js","components/User/style.js","components/User/User.js","components/Chat/Chat.js","components/UserStatus/style.js","components/UserStatus/UserStatus.js","components/AppBar/style.js","components/AppBar/AppBar.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["auth","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getAuth","database","getDatabase","useStyles","makeStyles","container","textAlign","GoogleIcon","style","width","height","viewBox","fill","d","SignIn","classes","writeUserData","user","a","set","ref","uid","name","displayName","email","profile_picture","photoURL","handleSignIn","currentUser","alert","signInWithPopup","GoogleAuthProvider","then","result","console","log","catch","error","Container","className","maxWidth","Button","variant","onClick","startIcon","grid","color","backgroundColor","inputGrid","gap","input","messageGrid","scrollToBottom","padding","marginTop","marginBottom","sentcontainer","display","justifyContent","messageText","wordBreak","receivedcontainer","sentTextContainer","paddingLeft","paddingRight","justifyItems","borderRadius","receiveTextContainer","timeText","seenIcon","Message","msg","currentUid","useEffect","receiverUid","status","updates","chatId","messageId","update","deliveredRef","onValue","snapshot","exists","senderUid","text","Icon","deliveredIcon","sentIcon","moment","time","fromNow","Messages","otherUid","useState","inputMessage","setInputMessage","messages","setMessages","mounted","chatRef","data","val","handleSend","event","messageKey","push","key","message","toDate","Grid","direction","alignItems","Object","keys","map","TextField","type","margin","value","disabled","onChange","e","target","onKeyPress","theme","root","flexGrow","paper","control","spacing","scroll","chatGrid","cursor","active","image","marginLeft","User","setChatId","setOtherUid","activeChat","setUser","userRef","src","alt","Avatar","Typography","Chat","chat","setChat","addUser","setAddUser","writeUser","addUserUid","onlyOnce","checkIfUserExists","mode","label","statusGrid","UserStatus","chatList","statusRef","activeUser","setActiveUser","mutualActive","forEach","infoRef","onDisconnect","remove","useStyle","title","textDecoration","toolbar","userBox","userName","avatar","Appbar","open","anchorE1","anchor","setAnchor","handleMenuClose","AppBar","position","Toolbar","aria-controls","aria-haspopup","currentTarget","Menu","id","anchorEl","keepMounted","Boolean","onClose","MenuItem","signOut","Home","setCurrentUser","progress","setProgress","onAuthStateChanged","CircularProgress","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fdf00fb.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDatabase } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBCmSxRTmvHf-NWVRevGb5F5j4ifZTuE9Y\",\r\n  authDomain: \"webchat-72740.firebaseapp.com\",\r\n  databaseURL:\r\n    \"https://webchat-72740-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"webchat-72740\",\r\n  storageBucket: \"webchat-72740.appspot.com\",\r\n  messagingSenderId: \"837698544528\",\r\n  appId: \"1:837698544528:web:c70e0549c7908fb763c915\",\r\n  measurementId: \"G-L4ZBY6WBC3\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const auth = getAuth();\r\n\r\nexport const database = getDatabase();\r\n//   \"https://webchat-72740-default-rtdb.asia-southeast1.firebasedatabase.app\"\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  container: {\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n","import React from 'react';\r\n\r\nconst GoogleIcon = () => (\r\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\r\n    <path\r\n      fill=\"currentColor\"\r\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default GoogleIcon;","import React from \"react\";\r\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { set, ref } from \"firebase/database\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\n\r\nimport { auth, database } from \"../../firebase\";\r\nimport { useStyles } from \"./style\";\r\nimport GoogleIcon from \"./GoogleIcon\";\r\n\r\nconst SignIn = () => {\r\n  const classes = useStyles();\r\n\r\n  const writeUserData = async (user) => {\r\n    set(ref(database, \"users/\" + user.uid), {\r\n      name: user.displayName,\r\n      uid: user.uid,\r\n      email: user.email,\r\n      profile_picture: user.photoURL,\r\n    });\r\n  };\r\n\r\n  const handleSignIn = async () => {\r\n    if (auth.currentUser !== null) {\r\n      alert(\"Already Signed In\");\r\n      return;\r\n    }\r\n\r\n    signInWithPopup(auth, new GoogleAuthProvider())\r\n      .then((result) => {\r\n        const user = result.user;\r\n        console.log(\"user\", user);\r\n        writeUserData(user);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Sign In error. Please try again later\");\r\n        console.log(\"Firebase Auth getAuth\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container className={classes.container} maxWidth=\"lg\">\r\n      <h1>Sign In To Continue</h1>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleSignIn}\r\n        startIcon={<GoogleIcon />}\r\n      >\r\n        Sign In With Google\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  grid: {\r\n    color: \"white\",\r\n    backgroundColor: \"purple\",\r\n  },\r\n});\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  inputGrid: {\r\n    gap: \"8px\",\r\n  },\r\n\r\n  input: {\r\n    width: \"70%\",\r\n  },\r\n\r\n  messageGrid: {\r\n    width: \"auto\",\r\n    backgroundColor: \"#ecf0bd\",\r\n  },\r\n\r\n  scrollToBottom: {\r\n    padding: '15px',\r\n    height: 500,\r\n    width: 600,\r\n    marginTop: '8px',\r\n    marginBottom: '8px',\r\n  },\r\n});\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  sentcontainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    gap: \"4px\",\r\n    marginBottom: \"8px\",\r\n  },\r\n\r\n  messageText: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n\r\n  receivedcontainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    gap: \"4px\",\r\n    marginBottom: \"8px\",\r\n  },\r\n\r\n  sentTextContainer: {\r\n    paddingLeft: \"8px\",\r\n    paddingRight: \"8px\",\r\n    justifyItems: \"flexEnd\",\r\n    backgroundColor: \"#c041c4\",\r\n    borderRadius: \"8px\",\r\n  },\r\n  receiveTextContainer: {\r\n    paddingLeft: \"8px\",\r\n    paddingRight: \"8px\",\r\n    justifyItems: \"flexEnd\",\r\n    backgroundColor: \"#7a2cd4\",\r\n    borderRadius: \"8px\",\r\n  },\r\n\r\n  timeText: {\r\n    color: \"black\",\r\n  },\r\n\r\n  seenIcon: {\r\n    color: \"blue\",\r\n  },\r\n});\r\n","import React, { useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport { Icon } from \"@material-ui/core\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport DoneAllIcon from \"@material-ui/icons/DoneAll\";\r\n\r\nimport { useStyles } from \"./style\";\r\nimport { onValue, ref, update } from \"@firebase/database\";\r\nimport { database } from \"../../../firebase\";\r\n\r\nconst Message = ({ msg, currentUid }) => {\r\n  const classes = useStyles();\r\n\r\n  /**Updating status to seen */\r\n  useEffect(() => {\r\n    if (msg?.receiverUid !== currentUid || msg?.status === \"seen\") return;\r\n\r\n    const updates = {};\r\n    updates[`messages/${msg?.chatId}/${msg?.messageId}/status`] = \"seen\";\r\n    update(ref(database), updates);\r\n  }, [msg]);\r\n\r\n  /**Updating Status to delivered */\r\n  useEffect(() => {\r\n    if (\r\n      msg?.receiverUid === currentUid ||\r\n      msg?.status === \"seen\" ||\r\n      msg?.status === \"delivereed\"\r\n    )\r\n      return;\r\n\r\n    const deliveredRef = ref(\r\n      database,\r\n      `delivered/${msg?.receiverUid}/${msg?.chatId}/${msg?.messageId}`\r\n    );\r\n    console.log(\"msg\", msg);\r\n\r\n    onValue(deliveredRef, (snapshot) => {\r\n      if (snapshot.exists()) return;\r\n\r\n      const updates = {};\r\n      updates[`messages/${msg?.chatId}/${msg?.messageId}/status`] = \"delivered\";\r\n      update(ref(database), updates);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        msg?.senderUid === currentUid\r\n          ? classes.sentcontainer\r\n          : classes.receivedcontainer\r\n      }\r\n    >\r\n      <div\r\n        className={\r\n          msg?.senderUid === currentUid\r\n            ? classes.sentTextContainer\r\n            : classes.receiveTextContainer\r\n        }\r\n      >\r\n        <p className={classes.messageText}>{msg.text}</p>\r\n        {msg?.senderUid === currentUid && (\r\n          <Icon>\r\n            {msg?.status === \"seen\" && (\r\n              <DoneAllIcon className={classes.seenIcon} />\r\n            )}\r\n\r\n            {msg?.status === \"delivered\" && (\r\n              <DoneAllIcon className={classes.deliveredIcon} />\r\n            )}\r\n\r\n            {msg?.status === \"sent\" && (\r\n              <DoneIcon className={classes.sentIcon} />\r\n            )}\r\n          </Icon>\r\n        )}\r\n      </div>\r\n      <p className={classes.timeText}>{moment(msg.time).fromNow()}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TextField, Grid, Button } from \"@material-ui/core\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport { onValue, ref, push, update } from \"@firebase/database\";\r\nimport moment from \"moment\";\r\n\r\nimport { useStyles } from \"./style\";\r\nimport Message from \"./Message/Message\";\r\nimport { database } from \"../../firebase\";\r\n\r\nconst Messages = ({ currentUid, otherUid, chatId }) => {\r\n  const classes = useStyles();\r\n  const [inputMessage, setInputMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState(null);\r\n\r\n  /**Getting Messages from firebase */\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const chatRef = ref(database, `messages/${chatId}`);\r\n    onValue(chatRef, (snapshot) => {\r\n      try {\r\n        const data = snapshot.val();\r\n        if (mounted) setMessages(data);\r\n      } catch (error) {\r\n        console.log(\"Messages useEffect fetch Message\", error);\r\n      }\r\n    });\r\n\r\n    return () => (mounted = false);\r\n  }, [chatId]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputMessage(event.target.value);\r\n  };\r\n\r\n  const handleSend = (event) => {\r\n    if (!inputMessage) return;\r\n\r\n    const chatRef = ref(database, `messages/${chatId}`);\r\n\r\n    const messageKey = push(chatRef, \"message\").key;\r\n\r\n    const message = {\r\n      senderUid: currentUid,\r\n      receiverUid: otherUid,\r\n      status: \"sent\",\r\n      chatId: chatId,\r\n      messageId: messageKey,\r\n      text: inputMessage,\r\n      time: moment().toDate(),\r\n    };\r\n\r\n    const updates = {};\r\n    updates[`messages/${chatId}/${messageKey}`] = message;\r\n    updates[`delivered/${otherUid}/${chatId}/${messageKey}`] = false;\r\n    setInputMessage(\"\");\r\n\r\n    update(ref(database), updates);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.messageGrid}\r\n      container\r\n      direction=\"column\"\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"center\"\r\n    >\r\n      <ScrollToBottom className={classes.scrollToBottom}>\r\n        {messages &&\r\n          Object.keys(messages).map((key) => (\r\n            <Message currentUid={currentUid} msg={messages[key]} key={key} />\r\n          ))}\r\n      </ScrollToBottom>\r\n      <Grid\r\n        className={classes.inputGrid}\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextField\r\n          className={classes.input}\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"dense\"\r\n          value={inputMessage}\r\n          disabled={!chatId}\r\n          onChange={(e) => handleInputChange(e)}\r\n          onKeyPress={(event) =>\r\n            event.key === \"Enter\" ? handleSend(event) : null\r\n          }\r\n        />\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={(e) => handleSend(e)}\r\n        >\r\n          Send\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n  scroll: {\r\n    height: 500,\r\n    width: \"100%\",\r\n    marginTop: \"8px\",\r\n    marginBottom: \"8px\",\r\n  },\r\n\r\n  inputGrid: {\r\n    gap: \"8px\",\r\n  },\r\n\r\n  input:{width: \"65%\"},\r\n\r\n  chatGrid: {\r\n    backgroundColor: \"#ade0d4\",\r\n    width: \"auto\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles({\r\n  grid: {\r\n    gap: \"8px\",\r\n    marginBottom: \"15px\",\r\n    backgroundColor: \"gray\",\r\n    padding: \"5px\",\r\n    borderRadius: \"15px\",\r\n    cursor: \"pointer\",\r\n\r\n    \"&:hover\": {\r\n      backgroundColor: \"#c2c7ed\",\r\n    },\r\n\r\n    \"&:hover:active\": {\r\n      backgroundColor: \"#cecfd6\",\r\n    },\r\n\r\n    \"&:hover:visited\": {\r\n      backgroundColor: \"#8088c4\",\r\n    },\r\n  },\r\n\r\n  active: {\r\n    gap: \"8px\",\r\n    marginBottom: \"15px\",\r\n    backgroundColor: \"#d45d87\",\r\n    padding: \"5px\",\r\n    borderRadius: \"15px\",\r\n  },\r\n\r\n  image: {\r\n    marginLeft: \"15px\",\r\n    height: \"48px\",\r\n    width: \"48px\",\r\n    borderRadius: \"30px\",\r\n  },\r\n});\r\n","import { Avatar, Grid, Typography } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { onValue, ref } from \"@firebase/database\";\r\n\r\nimport { useStyles } from \"./style\";\r\nimport { database } from \"../../firebase\";\r\n\r\nconst User = ({ chatId, uid, setChatId, setOtherUid, activeChat }) => {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState(null);\r\n\r\n  /**Getting User Data */\r\n  useEffect(() => {\r\n    const userRef = ref(database, `users/${uid}`);\r\n    onValue(userRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      setUser(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      className={activeChat ? classes.active : classes.grid}\r\n      container\r\n      justifyContent=\"flex-start\"\r\n      alignItems=\"center\"\r\n      onClick={() => {\r\n        if (!setChatId || !setOtherUid) return;\r\n        setOtherUid(uid);\r\n        setChatId(chatId);\r\n      }}\r\n    >\r\n      {user ? (\r\n        <img\r\n          className={classes.image}\r\n          src={user.profile_picture}\r\n          alt=\"profile_picture\"\r\n        />\r\n      ) : (\r\n        <Avatar className={classes.image} />\r\n      )}\r\n\r\n      <Typography variant=\"h6\">{user ? user.name : \"User Name\"}</Typography>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { onValue, ref, update } from \"@firebase/database\";\r\nimport { Grid, Container, TextField, Button } from \"@material-ui/core\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\n\r\nimport { database } from \"../../firebase\";\r\nimport { useStyles } from \"./style\";\r\nimport User from \"../User/User\";\r\n\r\nconst Chat = ({ user, setChatId, setOtherUid, chatId, chat, setChat }) => {\r\n  const classes = useStyles();\r\n  const [addUser, setAddUser] = useState(\"\");\r\n\r\n  /**Fetting all chats/conversations */\r\n  useEffect(() => {\r\n    const chatRef = ref(database, `chats/${user?.uid}`);\r\n    onValue(chatRef, (snapshot) => {\r\n      try {\r\n        const data = snapshot.val();\r\n        setChat(data);\r\n      } catch (error) {\r\n        console.log(\"Chat.js useEffect fetch chat\", error);\r\n      }\r\n    });\r\n  }, [user?.uid]);\r\n\r\n  const handleInputChange = (event) => {\r\n    setAddUser(event.target.value);\r\n  };\r\n\r\n  const writeUser = (addUserUid) => {\r\n    const chatRef = ref(database, `chats/${user.uid}/${addUserUid}`);\r\n\r\n    onValue(\r\n      chatRef,\r\n      (snapshot) => {\r\n        if (snapshot.exists()) {\r\n          alert(\"User is already available in your chat.\");\r\n          return;\r\n        }\r\n\r\n        const chat = {\r\n          chatId: `${user.uid}-${addUserUid}`,\r\n        };\r\n\r\n        const updates = {};\r\n        updates[`chats/${user.uid}/${addUserUid}`] = chat;\r\n        updates[`chats/${addUserUid}/${user.uid}`] = chat;\r\n        setAddUser(\"\");\r\n        update(ref(database), updates);\r\n      },\r\n      { onlyOnce: true }\r\n    );\r\n  };\r\n\r\n  const checkIfUserExists = () => {\r\n    if (user.email === addUser) {\r\n      alert(\"You can not add yourself\");\r\n      return;\r\n    }\r\n\r\n    const userRef = ref(database, \"users\");\r\n    onValue(userRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        try {\r\n          for (var key in snapshot.val()) {\r\n            if (snapshot.val()[key].email === addUser) {\r\n              writeUser(snapshot.val()[key].uid);\r\n              return;\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.log(\"checkIfUserExists method\", error);\r\n        }\r\n      }\r\n      alert(\"Invalid Email, User does not exist\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.chatGrid}\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      <Container maxWidth=\"xs\">\r\n        <h4>Conversations</h4>\r\n        <ScrollToBottom mode=\"top\" className={classes.scroll}>\r\n          {chat &&\r\n            Object.keys(chat).map((key) => (\r\n              <User\r\n                activeChat={\r\n                  chatId && chatId === chat[key].chatId ? true : false\r\n                }\r\n                uid={key}\r\n                chatId={chat[key].chatId}\r\n                key={key}\r\n                setChatId={setChatId}\r\n                setOtherUid={setOtherUid}\r\n              />\r\n            ))}\r\n        </ScrollToBottom>\r\n        <Grid\r\n          className={classes.inputGrid}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField\r\n            className={classes.input}\r\n            variant=\"outlined\"\r\n            label=\"Enter Email\"\r\n            type=\"text\"\r\n            value={addUser}\r\n            margin=\"dense\"\r\n            onChange={(e) => handleInputChange(e)}\r\n            onKeyPress={(event) =>\r\n              event.key === \"Enter\" ? checkIfUserExists() : null\r\n            }\r\n          />\r\n\r\n          <Button variant=\"outlined\" onClick={checkIfUserExists}>\r\n            Add User\r\n          </Button>\r\n        </Grid>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n  scroll: {\r\n    height: 500,\r\n    width: \"100%\",\r\n    marginTop: \"8px\",\r\n    marginBottom: \"8px\",\r\n  },\r\n\r\n  inputGrid: {\r\n    gap: \"8px\",\r\n  },\r\n\r\n  input:{width: \"65%\"},\r\n\r\n  statusGrid: {\r\n    backgroundColor: \"#e8b62c\",\r\n    width: \"auto\",\r\n  },\r\n}));\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ref, onDisconnect, onValue, set, remove } from \"@firebase/database\";\r\nimport { Grid, Container } from \"@material-ui/core\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\n\r\nimport { database } from \"../../firebase\";\r\nimport { useStyles } from \"./style\";\r\nimport User from \"../User/User\";\r\n\r\nconst UserStatus = ({ chatList, currentUid }) => {\r\n  const statusRef = ref(database, `status/${currentUid}`);\r\n  const classes = useStyles();\r\n\r\n  const [activeUser, setActiveUser] = useState([]);\r\n\r\n  /**Getting List of active users */\r\n  useEffect(() => {\r\n    onValue(ref(database, \"/status\"), (snapshot) => {\r\n      try {\r\n        if (!snapshot.exists) return;\r\n        const data = snapshot.val();\r\n        const mutualActive = [];\r\n        Object.keys(chatList).forEach((key) => {\r\n          if (data[key] && key !== currentUid) mutualActive.push(key);\r\n        });\r\n        setActiveUser(mutualActive);\r\n      } catch (error) {}\r\n    });\r\n  }, [chatList]);\r\n\r\n  /**Checking User Online Status of current User*/\r\n  useEffect(() => {\r\n    const infoRef = ref(database, \"/info/connected\");\r\n    onValue(infoRef, (snapshot) => {\r\n      if (snapshot.val() === false) return;\r\n\r\n      onDisconnect(statusRef)\r\n        .remove(statusRef)\r\n        .then(() => {\r\n          set(statusRef, true);\r\n        });\r\n    });\r\n  }, [currentUid]);\r\n\r\n  /**For Message Delivery status, deleting all messages of the current user from delivery node when user is online */\r\n  useEffect(() => {\r\n    const deliveredRef = ref(database, `delivered/${currentUid}`);\r\n    onValue(\r\n      deliveredRef,\r\n      (snapshot) => {\r\n        if (snapshot.exists()) remove(deliveredRef);\r\n      },\r\n      [currentUid]\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.statusGrid}\r\n      container\r\n      direction=\"row\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"flex-start\"\r\n    >\r\n      <Container maxWidth=\"xs\">\r\n        <h4>Active Users</h4>\r\n        <ScrollToBottom mode=\"top\" className={classes.scroll}>\r\n          {activeUser.map((key) => (\r\n            <User uid={key} key={key} />\r\n          ))}\r\n        </ScrollToBottom>\r\n      </Container>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserStatus;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nexport const useStyle = makeStyles({\r\n  title: {\r\n    color: \"#FFF\",\r\n    textDecoration: \"none\",\r\n  },\r\n\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n\r\n  userBox: {\r\n    display: \"flex\",\r\n    gap: \"25px\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  userName: {\r\n    \"@media screen and (max-width:800px)\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n\r\n  avatar: {\r\n    cursor: \"pointer\",\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Avatar,\r\n  Menu,\r\n  MenuItem,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { signOut } from \"@firebase/auth\";\r\nimport { ref, remove } from \"firebase/database\";\r\n\r\nimport { useStyle } from \"./style\";\r\nimport { auth } from \"../../firebase\";\r\nimport { database } from \"../../firebase\";\r\n\r\nconst Appbar = ({ user, setChatId }) => {\r\n  const classes = useStyle();\r\n  const [anchor, setAnchor] = useState({ open: false, anchorE1: null });\r\n\r\n  const handleMenuOpen = (event) => {\r\n    setAnchor({ open: true, anchorE1: event.currentTarget });\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchor({ open: false, anchorE1: null });\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    const uid = user?.uid;\r\n    remove(ref(database, `status/${uid}`)).then(() => {\r\n      signOut(auth);\r\n      setChatId(null);\r\n    });\r\n    handleMenuClose();\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"sticky\">\r\n      <Toolbar className={classes.toolbar}>\r\n        <Typography className={classes.title} variant=\"h6\">\r\n          WebChat\r\n        </Typography>\r\n        <div className={classes.userBox}>\r\n          <Typography variant=\"h6\" className={classes.userName}>\r\n            {user?.displayName}\r\n          </Typography>\r\n          {user && (\r\n            <Avatar\r\n              src={user?.photoURL}\r\n              className={classes.avatar}\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"false\"\r\n              onClick={(e) => handleMenuOpen(e)}\r\n            />\r\n          )}\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchor.anchorE1}\r\n            keepMounted\r\n            open={Boolean(anchor.open)}\r\n            onClose={handleMenuClose}\r\n          >\r\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { onAuthStateChanged } from \"@firebase/auth\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\nimport { auth } from \"../../firebase\";\r\nimport SignIn from \"../SignIn/SignIn\";\r\nimport { useStyles } from \"./style\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport Chat from \"../Chat/Chat\";\r\nimport UserStatus from \"../UserStatus/UserStatus\";\r\nimport Appbar from \"../AppBar/AppBar\";\r\n\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [progress, setProgress] = useState(true);\r\n  const [chatId, setChatId] = useState(null);\r\n  const [otherUid, setOtherUid] = useState(null);\r\n  const [chat, setChat] = useState(null);\r\n\r\n  /**Checking if user is logged in */\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) setCurrentUser(user);\r\n      else setCurrentUser(null);\r\n\r\n      setProgress(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Appbar user={currentUser} setChatId={setChatId} />\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        style={{ height: \"92vh\" }}\r\n      >\r\n        {progress && <CircularProgress />}\r\n        {!currentUser ? (\r\n          <SignIn />\r\n        ) : (\r\n          <>\r\n            <Grid\r\n              container\r\n              direction=\"row\"\r\n              alignItems=\"stretch\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Chat\r\n                chat={chat}\r\n                setChat={setChat}\r\n                chatId={chatId}\r\n                user={currentUser}\r\n                setChatId={setChatId}\r\n                setOtherUid={setOtherUid}\r\n              />\r\n              <Messages\r\n                currentUid={currentUser?.uid}\r\n                chatId={chatId}\r\n                otherUid={otherUid}\r\n              />\r\n              <UserStatus chatList={chat} currentUid={currentUser?.uid} />\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\n\nimport Home from \"./components/Home/Home\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}